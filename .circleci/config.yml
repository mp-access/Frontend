# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts-jessie-browsers-legacy

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests! Add tests! :(
      # - run: yarn test
  push_to_dockerhub:
    docker:
      - image: circleci/node:lts-jessie-browsers-legacy

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Print Docker image name
          command: echo "sealuzh/access-frontend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')"

      - run:
          name: Build Docker image
          command: docker build -t sealuzh/access-frontend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') .

      - add_ssh_keys:
          fingerprints:
            - "fe:b1:c8:73:4c:fd:f9:6f:b9:84:56:6a:bc:ad:03:c8"
            - "69:5f:1f:0f:de:f9:98:fe:2c:d8:02:cc:37:00:89:74"
      - run:
          name: Push Docker image
          command: |
            echo $DOCKER_SEAL_PWD | docker login -u $DOCKER_SEAL_LOGIN --password-stdin
            docker push sealuzh/access-frontend:$(echo $CIRCLE_BRANCH | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')

  deploy:
    docker:
      - image: circleci/node:lts-jessie-browsers-legacy
    working_directory: ~/repo

    steps:
      - run:
          name: Deploy app to Digital Ocean Server via Docker
          command: |
            ssh -o StrictHostKeyChecking=no $DIGITAL_OCEAN_USER@$DIGITAL_OCEAN_HOST "cd /root/Infrastructure && sh ./scripts/restart-containers-do.sh"

workflows:
  version: 2
  build-and-deploy-master:
    jobs:
      - build
      - push_to_dockerhub:
          requires:
            - build
      - deploy:
          requires:
            - push_to_dockerhub
          filters:
            branches:
              only: dev
